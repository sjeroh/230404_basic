@charset "UTF-8";

* {
  margin: 0;
  padding: 0;
}

body {
  background: lightgray;
}

.box1 {
  background: #fff;
}

.box1 .child {
  font-size: 30px;
  font-weight: bold;
  width: 300px;
  background-color: orange;
  margin: 30px auto;
  /* 마진병합현상 */
  text-align: center;
  border: 10px solid orange;
  border-radius: 10px;
  /* transition-property: transform;
  transition-duration: 0.3s;
  transition-delay: 0.5s;
  transition-timing-function: cubic-bezier(0.32, -0.69, 0.68, 2.43); */
  /* transition: transform 0.3s cubic-bezier(0.32, -0.69, 0.68, 2.43); */
  /* transition: transform 0.3s, backgroud-color 0.5s, color 0.3s 0.5s; */
  /* transition: all 0.3s; 아래와 같이 적어도 같은말임.*/
  transition: 0.3s;
}

.box1:hover .child {
  transform: translateY(-30px);
  background-color: blueviolet;
  color: antiquewhite;
  /* 차일드에게 호버를 주면 마우스를 올려서 차일드가 위로 가면 버벅거리는 현상이 일어난다. 그래서 부모에게 호버를 준다. */
}

.box2 {
  width: 400px;
  font-size: 30px;
  color: #222;
  margin: 0 auto;
  text-align: center;
  background-color: oldlace;
  overflow: hidden;
}

.box2>div {
  transform: translateX(-100%);
  transition: 0.5s ease;
  animation-fill-mode: forwards;
}

.box2:hover>div {
  transform: translateX(0);
}

.box2 .one {
  transition-delay: 0.3s;
}

.box2 .two {
  transition-delay: 0.6s;
}

.box2 .three {
  transition-delay: 0.9s;
}


.box3 {
  width: 100px;
  height: 100px;
  background-color: deepskyblue;
  text-align: center;
  line-height: 100px;

  /* 애니메이션이름(keyframes의 name과 동일해야함.) */
  animation-name: box_ani;

  /* 애니메이션 움직임 지속시간을 말함. second의 약자(초) */
  animation-duration: 2s;

  /* 애니메이션 반복횟수(숫자)//무한반복(infinite) */
  animation-iteration-count: 3; /* infinite */

  /* 애니메이션의 방향을 나타내는데, 노멀이 기본값, alternate 정 -> 역 -> 정을 반복한다는 말임.
  alternate-reverses는 그것에 반대!
  reverse는 시작이 반대로 된다. */
  animation-direction:alternate ;

  /* 애니메이션의 지연시간 */
  animation-delay: 1s;

  /* 애니메이션가속도 */
  animation-timing-function: ease;

  /* 애니메이션의 시작전과 끝후의 상태조절 
  forward 애니가 끝난 상태에서 멈춤
  backwards 애니가 시작을 keyframes의 0%인 상태부터 시작
  both = forwards+backwards*/
  animation-fill-mode: both;
}

/* 애니메이션움직임 제어 */

@keyframes box_ani{
  /* 시작지점 */
  from{margin-left: 300px;}

  /* 도착지점 */
  to{margin-left: 800px;}
}


.box4 {
  width: 100px;
  height: 100px;
  background-color: yellow;
  text-align: center;
  line-height: 100px;
  
  /* animation-name: box_ani2;
  animation-duration: 4s;
  animation-iteration-count: 3;
  animation-timing-function: ease-in-out;
  animation-delay: 1s;
  animation-fill-mode: both; */

  animation: box_ani2 4s ease-in-out 1s 3 both;
  animation: name duration timing-function delay iteration-count direction fill-mode;
}

@keyframes box_ani2{
  0%{transform: translate(0px, 0px);}
  25%{transform: translate(200px, 0px);}
  50%{transform: translate(200px, 200px);}
  75%{transform: translate(0px, 200px);}
  100%{transform: translate(0px, 0px);}
}